-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module SurveyAPI.Query exposing (..)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode exposing (Decoder)
import SurveyAPI.InputObject
import SurveyAPI.Interface
import SurveyAPI.Object
import SurveyAPI.Scalar
import SurveyAPI.ScalarCodecs
import SurveyAPI.Union


type alias FindSurveyByIDRequiredArguments =
    { id : SurveyAPI.ScalarCodecs.Id }


{-| Find a document from the collection of 'Survey' by its id.

  - id - The 'Survey' document's ID

-}
findSurveyByID :
    FindSurveyByIDRequiredArguments
    -> SelectionSet decodesTo SurveyAPI.Object.Survey
    -> SelectionSet (Maybe decodesTo) RootQuery
findSurveyByID requiredArgs object_ =
    Object.selectionForCompositeField "findSurveyByID" [ Argument.required "id" requiredArgs.id (SurveyAPI.ScalarCodecs.codecs |> SurveyAPI.Scalar.unwrapEncoder .codecId) ] object_ (identity >> Decode.nullable)
