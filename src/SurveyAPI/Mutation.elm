-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module SurveyAPI.Mutation exposing (..)

import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode exposing (Decoder)
import SurveyAPI.InputObject
import SurveyAPI.Interface
import SurveyAPI.Object
import SurveyAPI.Scalar
import SurveyAPI.ScalarCodecs
import SurveyAPI.Union


type alias CreateSurveyRequiredArguments =
    { data : SurveyAPI.InputObject.SurveyInput }


{-| Create a new document in the collection of 'Survey'

  - data - 'Survey' input values

-}
createSurvey :
    CreateSurveyRequiredArguments
    -> SelectionSet decodesTo SurveyAPI.Object.Survey
    -> SelectionSet decodesTo RootMutation
createSurvey requiredArgs object_ =
    Object.selectionForCompositeField "createSurvey" [ Argument.required "data" requiredArgs.data SurveyAPI.InputObject.encodeSurveyInput ] object_ identity


type alias UpdateSurveyRequiredArguments =
    { id : SurveyAPI.ScalarCodecs.Id
    , data : SurveyAPI.InputObject.SurveyInput
    }


{-| Update an existing document in the collection of 'Survey'

  - id - The 'Survey' document's ID
  - data - 'Survey' input values

-}
updateSurvey :
    UpdateSurveyRequiredArguments
    -> SelectionSet decodesTo SurveyAPI.Object.Survey
    -> SelectionSet (Maybe decodesTo) RootMutation
updateSurvey requiredArgs object_ =
    Object.selectionForCompositeField "updateSurvey" [ Argument.required "id" requiredArgs.id (SurveyAPI.ScalarCodecs.codecs |> SurveyAPI.Scalar.unwrapEncoder .codecId), Argument.required "data" requiredArgs.data SurveyAPI.InputObject.encodeSurveyInput ] object_ (identity >> Decode.nullable)


type alias DeleteSurveyRequiredArguments =
    { id : SurveyAPI.ScalarCodecs.Id }


{-| Delete an existing document in the collection of 'Survey'

  - id - The 'Survey' document's ID

-}
deleteSurvey :
    DeleteSurveyRequiredArguments
    -> SelectionSet decodesTo SurveyAPI.Object.Survey
    -> SelectionSet (Maybe decodesTo) RootMutation
deleteSurvey requiredArgs object_ =
    Object.selectionForCompositeField "deleteSurvey" [ Argument.required "id" requiredArgs.id (SurveyAPI.ScalarCodecs.codecs |> SurveyAPI.Scalar.unwrapEncoder .codecId) ] object_ (identity >> Decode.nullable)
